allprojects {
    group = 'com.datatrees.spider'
    version = '4.2.0-SNAPSHOT'
}

ext {
    env = System.getProperty("env", "dev")
}

buildscript {
    repositories {
        maven { url "http://192.168.5.252:8081/nexus/content/groups/public/" }
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.9.RELEASE'
    }
}

subprojects {

    apply plugin: "java"
    apply plugin: "idea"
    apply plugin: "eclipse"
    apply plugin: "maven"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    idea {
        module {
            downloadSources = true
            downloadJavadoc = true
        }
    }

    configurations {
        provided
        compile.extendsFrom provided
        deployerJars

//        all*.exclude group: "org.springframework", module: "spring"
        all*.exclude group: "log4j", module: "log4j"
        all*.exclude group: "org.slf4j", module: "slf4j-log4j12"
        all*.exclude group: "com.datatrees.rawdata", module: "AbstractPlugin"
        all*.exclude group: "org.jfrog.jade.plugins.common", module: "*"
        all*.exclude group: "org.apache.ibatis", module: "ibatis-sqlmap"
        all*.exclude group: "org.springframework", module: "spring-ibatis"
        all*.exclude group: "com.datatrees.crawler", module: "crawler-core"
        all*.exclude group: "io.netty", module: "netty-all"
    }

    dependencies {
        testCompile "junit:junit:${junitVersion}"
    }


    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = "sources"
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }

    repositories {
        mavenLocal()
        maven { url "http://192.168.5.252:8081/nexus/content/groups/public/" }
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    }

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, "seconds"
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }


}


